apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{.app}}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{.app}}
    spec:
      containers:
        - name: app
          image: {{.app_image}}
          ports:
            - containerPort: 8000
          env:
            - name: PGHOST
              value: postgres.pg 
            - name: PGUSER
              value: postgres 
            - name: PGPASSWORD
              value: {{.postgres_password}} 

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres
spec:
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: {{.postgres_image}}
          env:
            - name: POSTGRES_PASSWORD
              value: {{.postgres_password}}
            - name: PGDATA 
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
              name: postgres 
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim


---
apiVersion: v1
kind: Service
metadata:
  name: {{.app}}
spec:
  type: LoadBalancer
  selector:
    app: {{.app}}
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: LoadBalancer
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
